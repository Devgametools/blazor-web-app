@page "/products/addproduct"
@inject IProductService productService
@inject ICategoryService categoryService
@inject NavigationManager navigationManager
@inject ILogger<AddProduct> Logger

<PageTitle>Add Product</PageTitle>

<ModuleTitle Title="Add Product" />

<button class="btn btn-primary" @onclick="goToProductPage">Back</button>

<EditForm Model="@product">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="col-8 form-group">
        <label for="Title" class="col-form-label">Title</label>
        <InputText id="Title" class="form-control" @bind-Value="product.Title" required />
        <ValidationMessage For="@(() => product.Title)" />
    </div>

    <div class="form-group">
        <label for="Description">Description</label>
        <InputText id="Description" class="form-control" @bind-Value="product.Description" />
        <ValidationMessage For="@(() => product.Description)" />
    </div>

</EditForm>

@code{
    private void goToProductPage() => navigationManager.NavigateTo("/products");

    private Product product = new();
    @* private List<Category> categories = new();

    protected override async Task OnInitializedAsync()
    {
        categories = await GetCategories();
    }

    private async Task<List<Category>> GetCategories()
    {
        return await categoryService.Get();
    }

    private async void HandleValidSubmit()
    {
        await productService.Add(product);
        navigationManager.NavigateTo("/products");
    } *@
}